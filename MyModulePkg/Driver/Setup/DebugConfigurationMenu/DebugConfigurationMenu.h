#ifndef _DEBUGCONFIGURATIONMENU_H_
#define _DEBUGCONFIGURATIONMENU_H_

#include <Uefi.h>
#include <Library/DebugLib.h>
#include <Library/BaseMemoryLib.h>
#include <Library/MemoryAllocationLib.h>
#include <Library/UefiRuntimeServicesTableLib.h>
#include <Library/UefiBootServicesTableLib.h>
#include <Library/DevicePathLib.h>

//
// HII
//
#include <Library/HiiLib.h>
#include <Protocol/FormBrowser2.h>  
#include <Protocol/HiiString.h> 
#include <Protocol/HiiDatabase.h>
#include <Protocol/HiiPackageList.h>
#include <Protocol/HiiConfigAccess.h>
#include <Protocol/HiiConfigRouting.h>
#include <Setup/Setup.h>

//
// The arrays below constitute our HII package list. They are auto-generated by
// the VFR compiler and linked into the driver image during the build.
//
// - The strings package receives its C identifier from the driver's BASE_NAME,
//   plus "Strings".
//
// - The forms package receives its C identifier from the VFR file's basename,
//   plus "Bin".
//
//
extern UINT8  DebugConfigurationMenuStrings[];
extern UINT8  DebugConfigurationMenuFormsBin[];

//
// Config Access Protocol instance defined by HiiConfigAccess.c
//
extern EFI_HII_CONFIG_ACCESS_PROTOCOL gDcmHiiConfigAccessProtocol;

#pragma pack(push, 1)
///
/// HII specific Vendor Device Path definition.
///
struct _HII_VENDOR_DEVICE_PATH {
  VENDOR_DEVICE_PATH             VendorDevicePath;
  EFI_DEVICE_PATH_PROTOCOL       End;
};

//
// Private context data
//

#define DCM_SIGNATURE SIGNATURE_32 ('D', 'C', 'M', 'D')

struct _DCM_PRIVATE_DATA {
  UINT32                          Signature;
  EFI_HANDLE                      DriverHandle;
  CHAR16                          *IfrVariableName;
  EFI_GUID                        FormSetGuid;
  DEBUG_CONFIGURATION_MENU_VAR    Configuration;

  //
  // Consumed protocol
  //
  //
  EFI_HII_CONFIG_ROUTING_PROTOCOL *HiiConfigRoutingProtocol;

  //
  // Produced protocol
  //
  EFI_HII_CONFIG_ACCESS_PROTOCOL  HiiConfigAccessProtocol;
};

#pragma pack(pop)

typedef struct _HII_VENDOR_DEVICE_PATH HII_VENDOR_DEVICE_PATH;
typedef struct _DCM_PRIVATE_DATA       DCM_PRIVATE_DATA;

#define DCM_PRIVATE_FROM_THIS(Record)  CR (Record, DCM_PRIVATE_DATA, HiiConfigAccessProtocol, DCM_SIGNATURE)

// HII support for Device Path
HII_VENDOR_DEVICE_PATH  mDcmHiiVendorDevicePath = {
  {
    {
      HARDWARE_DEVICE_PATH,
      HW_VENDOR_DP,
      {
        (UINT8)(sizeof(VENDOR_DEVICE_PATH)),
        (UINT8)((sizeof(VENDOR_DEVICE_PATH)) >> 8)
      }
    },
    DEBUG_CONFIGURATION_MENU_FORMSET_GUID
  },
  {
    END_DEVICE_PATH_TYPE,
    END_ENTIRE_DEVICE_PATH_SUBTYPE,
    {
      (UINT8)(END_DEVICE_PATH_LENGTH),
      (UINT8)((END_DEVICE_PATH_LENGTH) >> 8)
    }
  }
};

#endif // _DEBUGCONFIGURATIONMENU_H_